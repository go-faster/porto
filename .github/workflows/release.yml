name: Release

on:
  push:
    branches: [ "main" ]
    paths:
      - 'debian/changelog'

permissions:
  contents: write
  packages: write
  id-token: write

env:
  BUILD_TYPE: Release
  BUILD_DEPENDENCIES: |
        g++ \
        cmake \
        protobuf-compiler \
        libprotobuf-dev \
        libunwind-dev \
        libgoogle-perftools-dev \
        libnl-3-dev \
        libnl-genl-3-dev \
        libnl-route-3-dev \
        libnl-idiag-3-dev \
        libncurses5-dev \
        libelf-dev \
        zlib1g-dev \
        pandoc \
        libbpf-dev
  BUILD_DEB_DEPENDENCIES: |
        dpkg-dev \
        debhelper \
        pkg-config \
        autoconf \
        libtool \
        dh-python \
        python-all \
        python-setuptools \
        python3-setuptools \
        bash-completion

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-20.04, ubuntu-22.04]
        arch: [amd64]
  
    runs-on: ${{matrix.os}}

    steps:
    - uses: actions/checkout@v3

    - name: Dependencies installation
      run: |
        sudo apt update
        sudo apt install -y ${{env.BUILD_DEPENDENCIES}}
        sudo apt install -y ${{env.BUILD_DEB_DEPENDENCIES}}

    - name: ccache
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        create-symlink: true
        key: ${{ github.job }}-${{ matrix.os }}

    - name: Set environment variables
      run: |
        echo "VERSION=$(sed -nE 's#.*\((.*)\).*#\1#p;q' debian/changelog)" >> $GITHUB_ENV
        case ${{matrix.os}} in
          ubuntu-20.04)
            echo "UBUNTU_NAME=focal" >> $GITHUB_ENV
            ;;
          ubuntu-22.04)
            echo "UBUNTU_NAME=jammy" >> $GITHUB_ENV
            ;;
        esac

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} -j$(nproc)

    - name: Prepare archive
      run: |
        mkdir -p ${{github.workspace}}/build/bin
        cp ${{github.workspace}}/build/portod ${{github.workspace}}/build/bin
        cp ${{github.workspace}}/build/portoctl ${{github.workspace}}/build/bin
        tar porto_${{env.UBUNTU_NAME}}_${{env.VERSION}}_${{matrix.arch}}.tgz -C ${{github.workspace}}/build/bin .

    - name: Upload archive
      uses: actions/upload-artifact@v2
      with:
        name: packages
        path: porto_${{env.UBUNTU_NAME}}_${{env.VERSION}}_${{matrix.arch}}.tgz

    - name: Setup ccache in PATH
      run: |
        export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"

    - name: Build Debian package
      run: |
        echo Porto version: ${{env.VERSION}}
        echo Ubuntu name: ${{env.UBUNTU_NAME}}
        ./dpkg-buildpackage -b --target-arch ${{matrix.arch}}
        mv ../porto_${{env.VERSION}}_${{matrix.arch}}.deb porto_${{env.UBUNTU_NAME}}_${{env.VERSION}}_${{matrix.arch}}.deb

    - name: Upload Debian package
      uses: actions/upload-artifact@v2
      with:
        name: packages
        path: porto_${{env.UBUNTU_NAME}}_${{env.VERSION}}_${{matrix.arch}}.deb

  release:
    runs-on: ubuntu-latest
    needs: build
    permissions: write-all
    steps:
    - name: Download Debian package
      uses: actions/download-artifact@v2
      with:
        name: packages

    - name: Get version
      run: |
        filename=$(ls porto_* | head -n 1)
        filename=${filename#porto_*_}
        VERSION=${filename%%_*}
        echo Version: $VERSION
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      with:
        tag_name: v${{env.VERSION}}
        release_name: Release v${{env.VERSION}}
        draft: false
        prerelease: false

    - name: Upload release asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      with:
        upload_url: ${{steps.create_release.outputs.upload_url}}
        asset_path: ./porto_focal_${{env.VERSION}}_amd64.deb
        asset_name: porto_focal_${{env.VERSION}}_amd64.deb
        asset_content_type: application/vnd.debian.binary-package

    - name: Upload release asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      with:
        upload_url: ${{steps.create_release.outputs.upload_url}}
        asset_path: ./porto_focal_${{env.VERSION}}_amd64.tgz
        asset_name: porto_focal_${{env.VERSION}}_amd64.tgz
        asset_content_type: application/gzip

    - name: Upload release asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      with:
        upload_url: ${{steps.create_release.outputs.upload_url}}
        asset_path: ./porto_jammy_${{env.VERSION}}_amd64.deb
        asset_name: porto_jammy_${{env.VERSION}}_amd64.deb
        asset_content_type: application/vnd.debian.binary-package

    - name: Upload release asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      with:
        upload_url: ${{steps.create_release.outputs.upload_url}}
        asset_path: ./porto_jammy_${{env.VERSION}}_amd64.tgz
        asset_name: porto_jammy_${{env.VERSION}}_amd64.tgz
        asset_content_type: application/gzip
